name: Check

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check:
    name: Check project structure
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Check project files
        run: |
          echo "Checking project structure..."
          ls -la
          echo "Checking Python package structure..."
          ls -la parrotnlp/
          echo "Checking source files..."
          ls -la src/
          echo "Checking test files..."
          ls -la tests/

      - name: Validate pyproject.toml
        run: |
          python -c "import tomllib; tomllib.load(open('pyproject.toml', 'rb')); print('✅ pyproject.toml is valid')"

      - name: Validate Cargo.toml
        run: |
          cargo check --message-format=short

      - name: Check for tiktoken references
        run: |
          echo "Checking for any remaining tiktoken references..."
          if grep -r "tiktoken" . --exclude-dir=.git --exclude-dir=target --exclude-dir=dist; then
            echo "❌ Found tiktoken references!"
            exit 1
          else
            echo "✅ No tiktoken references found"
          fi

      - name: Check for encoding references
        run: |
          echo "Checking for any remaining encoding references..."
          if grep -r "get_encoding\|list_encoding_names\|encoding_for_model" . --exclude-dir=.git --exclude-dir=target --exclude-dir=dist; then
            echo "❌ Found encoding references!"
            exit 1
          else
            echo "✅ No encoding references found"
          fi

      - name: Verify word tokenization functionality
        run: |
          echo "Verifying word tokenization functionality..."
          python -c "
          import parrotnlp
          print('✅ parrotnlp imports successfully')
          
          # Check available functions
          available = [f for f in dir(parrotnlp) if not f.startswith('_')]
          expected = ['VietnameseTokenizer', 'VietnameseWordSegmenter', 'word_tokenize']
          
          for func in expected:
              if func in available:
                  print(f'✅ {func} is available')
              else:
                  print(f'❌ {func} is missing')
                  exit(1)
          
          # Test basic functionality
          try:
              result = parrotnlp.word_tokenize('Chàng trai 9X Quảng Trị')
              print(f'✅ word_tokenize works: {result}')
          except Exception as e:
              print(f'❌ word_tokenize failed: {e}')
              exit(1)
          "
